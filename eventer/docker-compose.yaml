version: '3'

services:
  eventer:
    build:
        context: ./
        dockerfile: ./Dockerfile
    image: sibedge/eventer
    container_name: eventer
    depends_on:
      - postgres
      - broker
    ports:
      - "9099:9099"
    restart: on-failure
    environment:
        EVENTER_CONFIG: |
            logging:
                # levels: "debug", "info", "warn", "error", "dpanic", "panic", and "fatal"
                level: debug
            instance_id: crazy_eventers
            kafka:
                bootstrap_servers: broker:9092
                topic: events
            postgres:
                host: postgres
                port: 5432
                user: user
                password: secret
                db: events
                table: events
            service:
                listen: 0.0.0.0:9099
    command: bash -c "while ! curl http://postgres:5432/ 2>&1 | grep '52'; do sleep 1; done; echo \"$$EVENTER_CONFIG\" > /config.yaml; ./eventer start --config config.yaml"

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:6.2.0
    container_name: broker
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
        POSTGRES_USER: user
        POSTGRES_PASSWORD: secret
        POSTGRES_DB: events


networks:
  default:
    name: eventer_network
    driver: bridge